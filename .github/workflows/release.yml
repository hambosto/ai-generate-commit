# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.2"

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Build
        run: |
          platforms=("windows/amd64" "windows/386" "darwin/amd64" "darwin/arm64" "linux/amd64" "linux/386")
          for platform in "${platforms[@]}"
          do
            platform_split=(${platform//\// })
            GOOS=${platform_split[0]}
            GOARCH=${platform_split[1]}
            output_name='ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-'$GOOS'-'$GOARCH
            if [ $GOOS = "windows" ]; then
              output_name+='.exe'
            fi
            env GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-s -w" -o $output_name ./cmd/ai-generate-commit
            if [ $? -ne 0 ]; then
              echo 'An error has occurred! Aborting the script execution...'
              exit 1
            fi
          done

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Windows amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows 386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-windows-386.exe
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-windows-386.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset macOS amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset macOS arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-darwin-arm64
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Linux amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Linux 386
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-linux-386
          asset_name: ai-generate-commit-${{ steps.get_version.outputs.VERSION }}-linux-386
          asset_content_type: application/octet-stream
